{"version":3,"sources":["..\\..\\..\\..\\States.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAMgB,gCAA4B,iBAAI,oBAAJ,sEAA5B;AACA,wCAA4C,iBAAI,oBAAJ,sEAA5C;AACA,0CAAkC,iBAAI,oBAAJ,sEAAlC;AACA,sCAA0C,oBAA1C;;AAGR;AAAA;AAAiB;;AAEjB;AAAA;AAAyB;;AAEzB;AAAA;AAA2B;;AAG3B;AAAA,gCAAS,iBAAG,oBAAH,sEAAT;AACA,wCAAa,iBAAG,oBAAH,sEAAb;AACA,sCAAY,oBAAZ;AACA,0CAAc,iBAAG,oBAAH,sEAAd;AAAmB;;AAGb;AAAA,2CAEF;AAAA,0CAAY,gGAAZ;AAAyC;AAF7B","file":"States.js","sourcesContent":["ï»¿namespace AcademicMarkdown\r\n\r\nmodule States = \r\n    open Types\r\n    open Utility\r\n\r\n    let mutable links: Map<string,string> = Map []\r\n    let mutable footnotes: Map<string, (string * string)> = Map []\r\n    let mutable flowcharts: Map<string, string> = Map []\r\n    let mutable headings: List<(string * int * string)> = []\r\n\r\n    let setLinks newLinks = \r\n        links <- newLinks\r\n    let setFootnotes newFootnotes =\r\n        footnotes <- newFootnotes\r\n    let setFlowCharts newFlowCharts = \r\n        flowcharts <- newFlowCharts\r\n    \r\n    let initState () = \r\n        links <- Map[]\r\n        footnotes <- Map[]\r\n        headings <- []\r\n        flowcharts <- Map[]\r\n\r\n    let addHeading newHeading =\r\n        match newHeading with\r\n        | Heading (text, level, id) -> \r\n            headings <- (text, level, id) :: headings\r\n        | _ -> ()"]}